{"version":3,"sources":["components/form/index.js","components/form/form.js","components/header/index.js","components/header/header.js","components/instructions/instructions.js","components/instructions/index.js","components/result/index.js","components/result/result.js","App.js","index.js"],"names":["Form","state","input","level","props","lvl","onSubmit","e","preventDefault","onInput","setState","target","value","onLevelChange","this","className","onChange","name","id","cols","rows","type","Component","Header","Instructions","Result","content","useState","isCopied","toggleCopied","text","onCopy","App","result","newLevel","kurwafikacja","rawText","finalText","rawArray","split","finalArray","chunk","splice","length","push","concat","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAEeA,E,4MCGXC,MAAQ,CACJC,MAAO,GACPC,MAAO,EAAKC,MAAMC,K,EAEtBC,SAAW,SAACC,GACRA,EAAEC,iBACF,EAAKJ,MAAME,SAAS,EAAKL,MAAMC,Q,EAGnCO,QAAU,SAACF,GAEP,EAAKG,SAAS,CACVR,MAAOK,EAAEI,OAAOC,S,EAIxBC,cAAgB,SAACN,GACb,EAAKH,MAAMS,cAAcN,EAAEI,OAAOC,OAClC,EAAKF,SAAS,CACVP,MAAMI,EAAEI,OAAOC,S,4CAIvB,WAEI,MAAyBE,KAAKb,MAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACf,OACI,mCACI,qBAAKY,UAAU,OAAf,SACI,uBACIT,SAAWQ,KAAKR,SADpB,UAGI,yBACIM,MAAQT,EACRa,SAAWF,KAAKD,cAFpB,UAII,wBAAQD,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,0BAEJ,0BACIK,KAAK,GACLC,GAAG,GACHC,KAAK,KACLC,KAAK,KACLR,MAAQV,EACRc,SAAWF,KAAKL,UAIpB,wBACIY,KAAK,SADT,qC,GApDUC,aCDnBC,G,kKCGX,WACI,OACI,mCACI,sBAAKR,UAAU,SAAf,UACI,8CACA,gC,GAPgBO,c,MCqBrBE,ICvBAA,EDCf,WACI,OACI,qCACI,6CACA,+BACI,2DAGA,6CAGA,kDAGA,gE,oBEfDC,MCGA,SAAgBrB,GAE3B,IAAQsB,EAAYtB,EAAZsB,QAER,EAA+BC,oBAAS,GAAxC,mBAAKC,EAAL,KAAeC,EAAf,KASA,OACI,qCACI,qBAAKd,UAAU,SAAf,SACI,4BACMW,MAGX,cAAC,kBAAD,CACKI,KAAOJ,EACPK,OAAS,WAbjBF,GADqB,IAYlB,SAKK,+CAMW,IAAdD,EAAqB,mBAAGb,UAAU,UAAb,wBAAwC,SC5BrDiB,E,4MAEnB/B,MAAQ,CACNgC,OAAQ,KACR9B,MAAO,G,EAGTU,cAAgB,SAACqB,GACf,EAAKxB,SAAS,CACZP,MAAO+B,K,EAIXC,aAAe,SAACC,GAER,IAKFC,EALIlC,EAAU,EAAKF,MAAfE,MACFmC,EAAWF,EAAQG,MAAM,KAG3BC,EAAa,GAEbC,EAAQ,GAEZ,IACEA,EAAQH,EAASI,OAAO,EAAGvC,IAClBwC,QAAUxC,GAAOsC,EAAMG,KARpB,SASZJ,EAAaA,EAAWK,OAAOJ,SACxBA,EAAME,OAASxC,GAGxBkC,EAAYG,EAAWM,KAAK,KAE5B,EAAKpC,SAAS,CACZuB,OAAQI,K,4CAMZ,WAEE,MAA0BvB,KAAKb,MAAvBgC,EAAR,EAAQA,OAAQ9B,EAAhB,EAAgBA,MAEhB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEG,SAAWQ,KAAKqB,aAChB9B,IAAMF,EACNU,cAAkBC,KAAKD,gBAEvBoB,EAAS,cAAC,EAAD,CAAQP,QAAUO,IAAc,Y,GApDlBX,aCDjCyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8cdf81fd.chunk.js","sourcesContent":["import Form from './form';\n\nexport default Form;","import { Component } from \"react\";\nimport './form.css'\n\nexport default class Form extends Component{\n\n    state = {\n        input: '',\n        level: this.props.lvl\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(this.state.input)\n    }\n\n    onInput = (e) => {\n        \n        this.setState({\n            input: e.target.value\n        })\n    }\n\n    onLevelChange = (e) => {\n        this.props.onLevelChange(e.target.value);\n        this.setState({\n            level:e.target.value\n        })\n    }\n\n    render(){\n\n        const { input, level } = this.state;\n        return(\n            <>\n                <div className=\"form\">\n                    <form\n                        onSubmit={ this.onSubmit }\n                    >\n                        <select \n                            value={ level }\n                            onChange={ this.onLevelChange }\n                        >\n                            <option value=\"5\">Podkurwiony</option>\n                            <option value=\"4\">Wkurwiony</option>\n                            <option value=\"3\">Megawkurw</option>\n                        </select>\n                        <textarea \n                            name=\"\" \n                            id=\"\" \n                            cols=\"30\" \n                            rows=\"10\"\n                            value={ input }\n                            onChange={ this.onInput }\n                            \n                        > \n                        </textarea>\n                        <button \n                            type=\"submit\"\n                        >\n                            Kurwafikacja\n                        </button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n  }\n","import Header from './header';\n\nexport default Header;","import { Component } from \"react\";\nimport './header.css'\n\nexport default class Header extends Component\n {\n    render(){\n        return(\n            <>\n                <div className=\"header\">\n                    <h1>Kurwafikator</h1>\n                    <hr />\n                </div> \n            </>\n        )\n    }\n  }\n\n","import './instructions.css';\n\nfunction Instructions(){\n    return(\n        <>\n            <h2>Instrukcja:</h2>\n            <ol>\n                <li> \n                    Wybierz poziom wkurwienia\n                </li>\n                <li>\n                    Wpisz tekst\n                </li>\n                <li>\n                    Kliknij przycisk\n                </li>\n                <li>\n                    Ciesz siÄ™ wynikiem \n                </li>\n            </ol>\n        </>\n    )\n}\n\nexport default Instructions;","import Instructions from './instructions';\nexport default Instructions;","import Result from './result';\nexport default Result;","import { useState } from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport './result.css';\n\nexport default function Result(props){\n\n    const { content } = props;\n\n    let [isCopied, toggleCopied] = useState(false);\n\n    const onCopy = () => {\n        \n        const copiedStatus = true;\n        toggleCopied(copiedStatus);\n\n    }\n\n    return(\n        <>\n            <div className=\"result\">\n                <p>\n                    { content } \n                </p>\n            </div>\n           <CopyToClipboard \n                text={ content }\n                onCopy={ () => onCopy() } \n                >\n                \n                <button>\n                    Kopiuj\n                </button>\n\n           </CopyToClipboard>\n\n           { isCopied  === true ? <p className=\"message\">Skopiowano</p> : null } \n\n        </>\n    )\n}\n\n","import './App.css';\nimport { Component } from 'react';\nimport Form from './components/form';\nimport Header from './components/header';\nimport Instructions from './components/instructions';\nimport Result from './components/result';\n\nexport default class App extends Component {\n  \n  state = {\n    result: null,\n    level: 4\n  }\n\n  onLevelChange = (newLevel) => {\n    this.setState({ \n      level: newLevel \n    })\n  }\n\n  kurwafikacja = (rawText) => {\n    \n    const { level } = this.state,\n          rawArray = rawText.split(' '),\n          kurwa = 'kurwa';\n\n    let finalArray = [],\n        finalText = '',\n        chunk = [];\n\n    do{\n      chunk = rawArray.splice(0, level);\n      if(chunk.length >= level) chunk.push(kurwa);\n      finalArray = finalArray.concat(chunk);\n    } while (chunk.length > level)\n\n\n    finalText = finalArray.join(' ');\n\n    this.setState({\n      result: finalText\n    })\n\n\n  }\n  \n  render(){\n\n    const { result, level } = this.state;\n\n    return(\n      <>\n        <Header/>\n        <Instructions/>\n        <Form \n          onSubmit={ this.kurwafikacja } \n          lvl={ level }\n          onLevelChange = { this.onLevelChange }\n          />\n        { result ? <Result content={ result } /> : null }\n      </>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}